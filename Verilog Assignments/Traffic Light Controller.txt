// Code your design here
module TrafficControl(input clk,rst, output reg [2:0] M1,output reg [2:0] M2, output reg [2:0] M3,output reg [2:0] M4);
  reg [2:0] ps; integer count;
  

  parameter T1=3, T2=4,T3=5,T4=6,T5=7,T6=2;
  always@(posedge clk)
    begin
      if (rst==1)
        begin
          ps<=0;count<=0;
        end
      else
        begin
        case(ps)
          0: 
            begin
              ps<=1;
              count<=0;
            
            end
          1:
            begin
              if(count<T1)
                begin
                  ps<=1;
                  count<=count+1;
                end
              else
                begin
               	  ps<=2;
                  count<=0;
                end
            end
           2:
            begin
              if(count<T2)
                begin
                  ps<=2;
                  count<=count+1;
                end
              else
                begin
               	  ps<=3;
                  count<=0;
                end
            end
           3:
            begin
              if(count<T3)
                begin
                  ps<=3;
                  count<=count+1;
                end
              else
                begin
               	  ps<=4;
                  count<=0;
                end
            end
           4:
            begin
              if(count<T4)
                begin
                  ps<=4;
                  count<=count+1;
                end
              else
                begin
               	  ps<=5;
                  count<=0;
                end
            end
           5:
            begin
              if(count<T5)
                begin
                  ps<=5;
                  count<=count+1;
                end
              else
                begin
               	  ps<=6;
                  count<=0;
                end
            end
           6:
            begin
              if(count<T6)
                begin
                  ps<=6;
                  count<=count+1;
                end
              else
                begin
               	  ps<=1;
                  count<=0;
                end
            end
          default:
               begin
              ps<=0;
              count<=0;
          
            end
        endcase
        end
    end
  
      
      
 always@(*)
   begin
     case(ps)
       0:
         begin
             M1=3'b000;
              M2=3'b000;
              M3=3'b000;
              M4=3'b000;
         end
        1:
         begin
             M1=3'b001;
              M2=3'b001;
              M3=3'b100;
              M4=3'b100;
         end
        2:
         begin
             M1=3'b001;
              M2=3'b010;
              M3=3'b100;
              M4=3'b100;
         end
        3:
         begin
             M1=3'b001;
              M2=3'b100;
              M3=3'b001;
              M4=3'b100;
         end
        4:
         begin
             M1=3'b010;
              M2=3'b100;
              M3=3'b010;
              M4=3'b100;
         end
        5:
         begin
             M1=3'b100;
              M2=3'b100;
              M3=3'b100;
              M4=3'b001;
         end
        6:
         begin
             M1=3'b100;
              M2=3'b100;
              M3=3'b100;
              M4=3'b010;
         end
          default:
         begin
             M1=3'b000;
              M2=3'b000;
              M3=3'b000;
              M4=3'b000;
         end
     endcase
   end
endmodule  



// Code your testbench here
// or browse Examples
module Test;
  reg clk,rst;
  wire [2:0] M1;
  wire [2:0] M2;
  wire [2:0] M3;
  wire [2:0] M4;
  TrafficControl T1(clk,rst,M1,M2,M3,M4);
  initial
    begin
      clk=1;
      rst=0;
      #4;rst=1;
      #4;rst=0;
      #100;
      $finish;
    end
    initial
    begin
     $dumpfile("dump.vcd");
      $dumpvars();
  end
    always
    begin
    #2 clk=~clk;
    end
  
endmodule